import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment } from 'react';
import { Dialog, Transition } from '@headlessui/react';
import { Button } from '../atoms/button';
import { QuantityStepper } from '../molecules/quantity-stepper';
import { formatCurrency } from '@/lib/format';
export function CartDrawer({ isOpen, onClose, items, products, onUpdateQuantity, onRemove, subtotal, onCheckout, }) {
    return (_jsx(Transition.Root, { show: isOpen, as: Fragment, children: _jsxs(Dialog, { as: "div", className: "relative z-50", onClose: onClose, children: [_jsx(Transition.Child, { as: Fragment, enter: "ease-out duration-200", enterFrom: "opacity-0", enterTo: "opacity-100", leave: "ease-in duration-150", leaveFrom: "opacity-100", leaveTo: "opacity-0", children: _jsx("div", { className: "fixed inset-0 bg-slate-950/70 backdrop-blur-sm", "aria-hidden": "true" }) }), _jsx("div", { className: "fixed inset-0 overflow-hidden", children: _jsx("div", { className: "absolute inset-0 overflow-hidden", children: _jsx("div", { className: "pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10", children: _jsx(Transition.Child, { as: Fragment, enter: "transform transition ease-out duration-300", enterFrom: "translate-x-full", enterTo: "translate-x-0", leave: "transform transition ease-in duration-200", leaveFrom: "translate-x-0", leaveTo: "translate-x-full", children: _jsx(Dialog.Panel, { className: "pointer-events-auto w-screen max-w-md bg-slate-950 shadow-xl shadow-brand/20", children: _jsxs("div", { className: "flex h-full flex-col overflow-y-auto border-l border-slate-800", children: [_jsxs("div", { className: "flex items-center justify-between border-b border-slate-800 px-6 py-4", children: [_jsxs(Dialog.Title, { className: "text-lg font-semibold text-slate-100", children: ["Cart (", items.reduce((acc, item) => acc + item.quantity, 0), ")"] }), _jsx(Button, { variant: "ghost", onClick: onClose, children: "Close" })] }), _jsx("div", { className: "flex-1 space-y-6 px-6 py-4", children: items.length === 0 ? (_jsx("p", { className: "text-sm text-slate-400", children: "Your cart is empty. Add items from the catalog to get started." })) : (_jsx("ul", { className: "space-y-4", children: items.map((item) => {
                                                        const product = products[item.productId];
                                                        if (!product)
                                                            return null;
                                                        return (_jsxs("li", { className: "flex gap-4 rounded-xl border border-slate-800 p-3", children: [_jsx("img", { src: product.image, alt: product.title, className: "h-20 w-20 rounded-lg object-cover" }), _jsxs("div", { className: "flex flex-1 flex-col gap-2", children: [_jsxs("div", { children: [_jsx("h4", { className: "text-sm font-semibold text-slate-100", children: product.title }), _jsx("p", { className: "text-xs text-slate-400", children: formatCurrency(product.price) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx(QuantityStepper, { quantity: item.quantity, min: 1, max: product.stockQty, onChange: (value) => onUpdateQuantity(product.id, value) }), _jsx(Button, { type: "button", variant: "ghost", size: "sm", onClick: () => onRemove(product.id), children: "Remove" })] })] })] }, item.productId));
                                                    }) })) }), _jsxs("div", { className: "border-t border-slate-800 px-6 py-4", children: [_jsxs("div", { className: "flex items-center justify-between text-sm text-slate-300", children: [_jsx("span", { children: "Subtotal" }), _jsx("span", { className: "text-lg font-semibold text-slate-100", children: formatCurrency(subtotal) })] }), _jsx(Button, { className: "mt-4 w-full", size: "lg", onClick: onCheckout, disabled: items.length === 0, children: "Go to Checkout" })] })] }) }) }) }) }) })] }) }));
}
