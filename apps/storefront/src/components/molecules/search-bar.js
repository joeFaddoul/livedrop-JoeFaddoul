import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import clsx from 'clsx';
import { TextInput } from '../atoms/text-input';
export function SearchBar({ query, onQueryChange, selectedTag, onTagChange, sort, onSortChange, tags, }) {
    return (_jsxs("form", { className: "flex flex-col gap-4 rounded-2xl border border-slate-800 bg-slate-900/80 p-4 lg:flex-row lg:items-end", role: "search", "aria-label": "Product filters", onSubmit: (event) => event.preventDefault(), children: [_jsx("div", { className: "flex-1", children: _jsx(TextInput, { label: "Search", placeholder: "Search by product name or tag", value: query, onChange: (event) => onQueryChange(event.target.value), hint: "We search catalog titles and tags." }) }), _jsxs("div", { className: "flex flex-1 flex-col gap-3 sm:flex-row", children: [_jsxs("label", { className: "flex flex-1 flex-col text-sm font-semibold text-slate-200", children: ["Tag", _jsxs("select", { value: selectedTag, onChange: (event) => onTagChange(event.target.value), className: "mt-2 rounded-lg border border-slate-700 bg-slate-900 px-4 py-2 text-base text-slate-100 focus-visible:border-brand focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-brand/40", children: [_jsx("option", { value: "all", children: "All" }), tags.map((tag) => (_jsx("option", { value: tag, children: tag }, tag)))] })] }), _jsxs("label", { className: "flex flex-1 flex-col text-sm font-semibold text-slate-200", children: ["Sort", _jsxs("div", { className: "mt-2 flex overflow-hidden rounded-lg border border-slate-700", children: [_jsx("button", { type: "button", onClick: () => onSortChange('price-asc'), "aria-label": "Sort price low to high", "aria-pressed": sort === 'price-asc', className: clsx('flex-1 px-4 py-2 text-base transition focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-brand', sort === 'price-asc' ? 'bg-brand text-slate-900' : 'bg-slate-900 text-slate-100'), children: "Price \u2191" }), _jsx("button", { type: "button", onClick: () => onSortChange('price-desc'), "aria-label": "Sort price high to low", "aria-pressed": sort === 'price-desc', className: clsx('flex-1 px-4 py-2 text-base transition focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-brand', sort === 'price-desc' ? 'bg-brand text-slate-900' : 'bg-slate-900 text-slate-100'), children: "Price \u2193" })] })] })] })] }));
}
